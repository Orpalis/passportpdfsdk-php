<?php
/**
 * StickyNoteAnnotationIcon
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PassportPDF API
 *
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * StickyNoteAnnotationIcon Class Doc Comment
 *
 * @category Class
 * @description Defines the different available icons for a sticky note annotation.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class StickyNoteAnnotationIcon
{
    /**
     * Possible values of this enum
     */
    const COMMENT = 'Comment';
    const KEY = 'Key';
    const NOTE = 'Note';
    const HELP = 'Help';
    const NEW_PARAGRAPH = 'NewParagraph';
    const PARAGRAPH = 'Paragraph';
    const INSERT = 'Insert';
    const CHECK = 'Check';
    const CIRCLE = 'Circle';
    const CROSS = 'Cross';
    const CROSS_HAIRS = 'CrossHairs';
    const RIGHT_ARROW = 'RightArrow';
    const RIGHT_POINTER = 'RightPointer';
    const STAR = 'Star';
    const UP_ARROW = 'UpArrow';
    const UP_LEFT_ARROW = 'UpLeftArrow';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::COMMENT,
            self::KEY,
            self::NOTE,
            self::HELP,
            self::NEW_PARAGRAPH,
            self::PARAGRAPH,
            self::INSERT,
            self::CHECK,
            self::CIRCLE,
            self::CROSS,
            self::CROSS_HAIRS,
            self::RIGHT_ARROW,
            self::RIGHT_POINTER,
            self::STAR,
            self::UP_ARROW,
            self::UP_LEFT_ARROW,
        ];
    }
}


